# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class User(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, health: str=None, lat: float=None, long: float=None, role: str=None, device_id: str=None, last_online: str=None, user_id: int=None):  # noqa: E501
        """User - a model defined in Swagger

        :param name: The name of this User.  # noqa: E501
        :type name: str
        :param health: The health of this User.  # noqa: E501
        :type health: str
        :param lat: The lat of this User.  # noqa: E501
        :type lat: float
        :param long: The long of this User.  # noqa: E501
        :type long: float
        :param role: The role of this User.  # noqa: E501
        :type role: str
        :param device_id: The device_id of this User.  # noqa: E501
        :type device_id: str
        :param last_online: The last_online of this User.  # noqa: E501
        :type last_online: str
        :param user_id: The user_id of this User.  # noqa: E501
        :type user_id: int
        """
        self.swagger_types = {
            'name': str,
            'health': str,
            'lat': float,
            'long': float,
            'role': str,
            'device_id': str,
            'last_online': str,
            'user_id': int
        }

        self.attribute_map = {
            'name': 'name',
            'health': 'health',
            'lat': 'lat',
            'long': 'long',
            'role': 'role',
            'device_id': 'deviceId',
            'last_online': 'lastOnline',
            'user_id': 'userId'
        }

        self._name = name
        self._health = health
        self._lat = lat
        self._long = long
        self._role = role
        self._device_id = device_id
        self._last_online = last_online
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The user of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this User.


        :return: The name of this User.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this User.


        :param name: The name of this User.
        :type name: str
        """

        self._name = name

    @property
    def health(self) -> str:
        """Gets the health of this User.


        :return: The health of this User.
        :rtype: str
        """
        return self._health

    @health.setter
    def health(self, health: str):
        """Sets the health of this User.


        :param health: The health of this User.
        :type health: str
        """

        self._health = health

    @property
    def lat(self) -> float:
        """Gets the lat of this User.


        :return: The lat of this User.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat: float):
        """Sets the lat of this User.


        :param lat: The lat of this User.
        :type lat: float
        """

        self._lat = lat

    @property
    def long(self) -> float:
        """Gets the long of this User.


        :return: The long of this User.
        :rtype: float
        """
        return self._long

    @long.setter
    def long(self, long: float):
        """Sets the long of this User.


        :param long: The long of this User.
        :type long: float
        """

        self._long = long

    @property
    def role(self) -> str:
        """Gets the role of this User.


        :return: The role of this User.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role: str):
        """Sets the role of this User.


        :param role: The role of this User.
        :type role: str
        """

        self._role = role

    @property
    def device_id(self) -> str:
        """Gets the device_id of this User.


        :return: The device_id of this User.
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id: str):
        """Sets the device_id of this User.


        :param device_id: The device_id of this User.
        :type device_id: str
        """

        self._device_id = device_id

    @property
    def last_online(self) -> str:
        """Gets the last_online of this User.


        :return: The last_online of this User.
        :rtype: str
        """
        return self._last_online

    @last_online.setter
    def last_online(self, last_online: str):
        """Sets the last_online of this User.


        :param last_online: The last_online of this User.
        :type last_online: str
        """

        self._last_online = last_online

    @property
    def user_id(self) -> int:
        """Gets the user_id of this User.

          # noqa: E501

        :return: The user_id of this User.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: int):
        """Sets the user_id of this User.

          # noqa: E501

        :param user_id: The user_id of this User.
        :type user_id: int
        """

        self._user_id = user_id
