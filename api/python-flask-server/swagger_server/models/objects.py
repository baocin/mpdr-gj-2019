# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Objects(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, lat: float=None, long: float=None, start_lat: float=None, start_long: float=None, end_lat: float=None, end_long: float=None, hp: bool=None, dmg: bool=None, radius: float=None, speed: float=None, object_id: int=None):  # noqa: E501
        """Objects - a model defined in Swagger

        :param name: The name of this Objects.  # noqa: E501
        :type name: str
        :param lat: The lat of this Objects.  # noqa: E501
        :type lat: float
        :param long: The long of this Objects.  # noqa: E501
        :type long: float
        :param start_lat: The start_lat of this Objects.  # noqa: E501
        :type start_lat: float
        :param start_long: The start_long of this Objects.  # noqa: E501
        :type start_long: float
        :param end_lat: The end_lat of this Objects.  # noqa: E501
        :type end_lat: float
        :param end_long: The end_long of this Objects.  # noqa: E501
        :type end_long: float
        :param hp: The hp of this Objects.  # noqa: E501
        :type hp: bool
        :param dmg: The dmg of this Objects.  # noqa: E501
        :type dmg: bool
        :param radius: The radius of this Objects.  # noqa: E501
        :type radius: float
        :param speed: The speed of this Objects.  # noqa: E501
        :type speed: float
        :param object_id: The object_id of this Objects.  # noqa: E501
        :type object_id: int
        """
        self.swagger_types = {
            'name': str,
            'lat': float,
            'long': float,
            'start_lat': float,
            'start_long': float,
            'end_lat': float,
            'end_long': float,
            'hp': bool,
            'dmg': bool,
            'radius': float,
            'speed': float,
            'object_id': int
        }

        self.attribute_map = {
            'name': 'name',
            'lat': 'lat',
            'long': 'long',
            'start_lat': 'startLat',
            'start_long': 'startLong',
            'end_lat': 'endLat',
            'end_long': 'endLong',
            'hp': 'hp',
            'dmg': 'dmg',
            'radius': 'radius',
            'speed': 'speed',
            'object_id': 'objectId'
        }

        self._name = name
        self._lat = lat
        self._long = long
        self._start_lat = start_lat
        self._start_long = start_long
        self._end_lat = end_lat
        self._end_long = end_long
        self._hp = hp
        self._dmg = dmg
        self._radius = radius
        self._speed = speed
        self._object_id = object_id

    @classmethod
    def from_dict(cls, dikt) -> 'Objects':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The objects of this Objects.  # noqa: E501
        :rtype: Objects
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Objects.


        :return: The name of this Objects.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Objects.


        :param name: The name of this Objects.
        :type name: str
        """

        self._name = name

    @property
    def lat(self) -> float:
        """Gets the lat of this Objects.


        :return: The lat of this Objects.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat: float):
        """Sets the lat of this Objects.


        :param lat: The lat of this Objects.
        :type lat: float
        """

        self._lat = lat

    @property
    def long(self) -> float:
        """Gets the long of this Objects.


        :return: The long of this Objects.
        :rtype: float
        """
        return self._long

    @long.setter
    def long(self, long: float):
        """Sets the long of this Objects.


        :param long: The long of this Objects.
        :type long: float
        """

        self._long = long

    @property
    def start_lat(self) -> float:
        """Gets the start_lat of this Objects.


        :return: The start_lat of this Objects.
        :rtype: float
        """
        return self._start_lat

    @start_lat.setter
    def start_lat(self, start_lat: float):
        """Sets the start_lat of this Objects.


        :param start_lat: The start_lat of this Objects.
        :type start_lat: float
        """

        self._start_lat = start_lat

    @property
    def start_long(self) -> float:
        """Gets the start_long of this Objects.


        :return: The start_long of this Objects.
        :rtype: float
        """
        return self._start_long

    @start_long.setter
    def start_long(self, start_long: float):
        """Sets the start_long of this Objects.


        :param start_long: The start_long of this Objects.
        :type start_long: float
        """

        self._start_long = start_long

    @property
    def end_lat(self) -> float:
        """Gets the end_lat of this Objects.


        :return: The end_lat of this Objects.
        :rtype: float
        """
        return self._end_lat

    @end_lat.setter
    def end_lat(self, end_lat: float):
        """Sets the end_lat of this Objects.


        :param end_lat: The end_lat of this Objects.
        :type end_lat: float
        """

        self._end_lat = end_lat

    @property
    def end_long(self) -> float:
        """Gets the end_long of this Objects.


        :return: The end_long of this Objects.
        :rtype: float
        """
        return self._end_long

    @end_long.setter
    def end_long(self, end_long: float):
        """Sets the end_long of this Objects.


        :param end_long: The end_long of this Objects.
        :type end_long: float
        """

        self._end_long = end_long

    @property
    def hp(self) -> bool:
        """Gets the hp of this Objects.


        :return: The hp of this Objects.
        :rtype: bool
        """
        return self._hp

    @hp.setter
    def hp(self, hp: bool):
        """Sets the hp of this Objects.


        :param hp: The hp of this Objects.
        :type hp: bool
        """

        self._hp = hp

    @property
    def dmg(self) -> bool:
        """Gets the dmg of this Objects.


        :return: The dmg of this Objects.
        :rtype: bool
        """
        return self._dmg

    @dmg.setter
    def dmg(self, dmg: bool):
        """Sets the dmg of this Objects.


        :param dmg: The dmg of this Objects.
        :type dmg: bool
        """

        self._dmg = dmg

    @property
    def radius(self) -> float:
        """Gets the radius of this Objects.


        :return: The radius of this Objects.
        :rtype: float
        """
        return self._radius

    @radius.setter
    def radius(self, radius: float):
        """Sets the radius of this Objects.


        :param radius: The radius of this Objects.
        :type radius: float
        """

        self._radius = radius

    @property
    def speed(self) -> float:
        """Gets the speed of this Objects.


        :return: The speed of this Objects.
        :rtype: float
        """
        return self._speed

    @speed.setter
    def speed(self, speed: float):
        """Sets the speed of this Objects.


        :param speed: The speed of this Objects.
        :type speed: float
        """

        self._speed = speed

    @property
    def object_id(self) -> int:
        """Gets the object_id of this Objects.


        :return: The object_id of this Objects.
        :rtype: int
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id: int):
        """Sets the object_id of this Objects.


        :param object_id: The object_id of this Objects.
        :type object_id: int
        """

        self._object_id = object_id
